---
layout: post
title:      "The Asynchronous Human Desire"
date:       2020-06-08 02:18:44 +0000
permalink:  the_asynchronous_human_desire
---


Let's go back to the concept of ruby objects mimicking life. The basic metaphor is that we create objects to mimic the characteristics of life, such as a person object has a name, gender, a birthday, an occupation,... etc. And in Javascript the same can be true, though asynchronous functions. An async function allows a code to wait to execute through a promise. Basically a promise is just as it sounds. A promise to do something eventually. So if we were to be mimicking a real life scenario it could be something along the lines of instructions for baking a cake. First we preheat the oven, then we gather our ingredients, followed by mixing everything together, pour in a vessel, and then finally put the vessel with the batter in the oven and bake for a certain amount of time. The act of preheating the oven is asyncious to the promise of using it to bake a cake. It would take us longer to bake the cake if we were to have waited to preheat the oven. And so Javascipt's asynchronous functions share similar characteristics. It allows other code to load so the other code won't need to wait for it to be utilized. This is most common when using fetch. Fetch allows for data to be retrieved once it arrives. So when you call fetch, it accepts a url of the API you would like to access and then waits until the data is delivered. We then use that data to do what we need with it. Usually it's to retrieve the data or to create, update or delete. 

Though, the interesting thing is about this metaphor is how we, as the developer, must confide with the machine and mimic a machine in order for us to teach the machine to mimic life to the best of it's abilities. We must syncouniously create code line by line as it would be impossible to build code like some kind of borg in star trek. We do not have the ability to have asynchronous thought, we have a one track mind. We might we able to multitask to some extent but we do not have the ability to have two thoughts at once, unlike what we are programming machines to be able to do. Eventually once, quantum computing becomes a more viable option for programming, our machines will be able to do what we strive to be able to do, which is to truly be able to multitask asynchronously. Get a lot of work done at the same time.

It's funny how we want our cold inhospitable machines to mimic not just our behavior but we want them to mimic our hopes and dreams. We want them to be super humans. A mechanical ubermensch which could one day be better than us at everything we do. We will all turn into the middle aged person who realizes their children are already stronger and more intelligent than they are. It's a circle of life in the human world but in the world of programming, the program doesn't deteriorate, unless we tell it to.
